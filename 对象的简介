<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>对象的简介</title>
    <script>

        /*
        String
        Boolean
        Null
        number
        Undefind
        以上5种数据类型属于基本数据类型，以后我们看到的值，只要
        不是上边的5种，全都是对象
        Object
        基本数据类型都是单一的值，值和值之间没有任何联系
        在js中来表示一个人的信息（name，gender，age）
        var name = "zhangsan";
        var gender = "male";
        var age = 18;
        如果使用基本数据类型的数据，所创建的变量都是独立
         不能成为一个整体


         对象属于一种复合的数据类型，在对象中可以保存多个不同的数据类型的属性

         对象的分类
         1，内建对象
            由ES标准中定义的对象，在任何的ES的实现中都可以使用
         2，宿主对象
            由js的运行环境提供的对象，目前来讲主要指由浏览器提供的对象
            比如BOM（浏览器对象模型），DOM（文档对象模型）
         3.自定义对象
             由开发人员自己创建的对象

         */
        //创建对象
        /*
        使用new关键字调用的函数，是构造函数constructor
        构造函数时专门用来创建对象的函数
        使用typeof检查一个对象时，会返回object

         */
        var obj = new Object();
        console.log(typeof (obj));
        /*
        在对象中保存的值称为属性
       向对象添加属性
       语法：对象.属性名=属性值
         */
        //向obj中添加一个name属性
        obj.name = "sun";
        obj.gender = 'male';
        obj.age = 16;

        /*
        读取对象中的属性
        语法：对象.属性
        如果读取对象中没有的属性，不会报错，而是会返回undefined
         */
        /*
        修改对象的属性值
        语法：对象.属性值 = 新值
         */
        obj.name = "li";
        console.log(obj.age);
        console.log(obj.hello);
        console.log(obj.name);

        /*
        删除对象的属性
        语法：delete 对象.属性
         */
        delete obj.name;
        console.log(obj.name);
    </script>
</head>
<body>

</body>
</html>
