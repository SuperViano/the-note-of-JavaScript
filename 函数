<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>函数</title>
    <script>
        /*
        函数：是一个对象
        函数可以封装一些功能，在需要时可以执行这些功能；
         */
        //创建函数对象
        //可以将要封装的代码以字符串的唔系公司传递给构造函数
        var fun = new Function("console.log('Hello 这是我的第一个函数');");
        console.log(fun);
        //封装到函数的代码不会立即执行
        //函数中的代码会在调用的时候执行
        //调用函数 语法：函数对象()
        //当调用函数时，函数中封装的代码会按照顺序执行
        fun();

        fun.hello = "你好";
        console.log(fun.hello);
        //函数对象具有普通对象的所有功能

        //在实际开发中，很少使用构造函数来创建函数
        /*
       使用函数声明来创建一个函数
       语法：
       function 函数名([形参]){
                语句
                }
         */
        function  fun2() {
            console.log("这是我的第二个函数");
            alert("hhhh");
            document.write(">>>><<<<<");
        }
        console.log(fun2);
        //调用
        fun2();

        /*
        第三种方式：使用函数表达式来创建一个函数
        var 函数名 = function([形参]){
                语句
                };
         跟第二种方式一样。是将匿名函数赋值给一个变量。最末尾不要忘记加;
         */
        var fun3 = function () {
            console.log("我是匿名对象中封装的代码");
        };
        fun3();
    </script>
</head>
<body>

</body>
</html>
